version: "3.8"

services:
  # Mars service
  mars-service:
    build:
      context: ./src/mars-service
    env_file:
      - ./src/mars-service/.env.dev
      - ./src/mars-service/.env.secret
    volumes:
      - ./src/mars-service:/app
      - /app/node_modules
    command: npm run dev
    ports:
      - "5000:80"
    networks:
      - playground

  # OpenTelemetry Collector
  collector:
    image: otel/opentelemetry-collector:latest
    command: ["--config=/conf/collector-config.yaml", "--log-level=DEBUG"]
    volumes:
      - ./config/otlp-collector-config.yaml:/conf/collector-config.yaml
    ports:
      - "9464:9464"
      - "55680:55680"
      - "55681:55681"
    depends_on:
      - jaeger
      - zipkin
    networks:
      - playground

  zipkin:
    image: openzipkin/zipkin:latest
    container_name: zipkin
    restart: on-failure
    ports:
      - "9411:9411"
    networks:
      - playground

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource,grafana-piechart-panel
    ports:
      - "3000:3000"
    restart: on-failure
    volumes:
      - grafana:/var/lib/grafana
    networks:
      - playground

  prometheus:
    image: prom/prometheus:v2.11.1
    container_name: prometheus
    volumes:
      - prometheus:/prometheus
      - ./config/prometheus.yaml:/etc/prometheus/prometheus.yaml
    ports:
      - "9090:9090"
    restart: on-failure
    networks:
      - playground

  jaeger:
    image: jaegertracing/all-in-one
    container_name: jaeger
    restart: on-failure
    ports:
      - "5775:5775/udp"
      - "5778:5778"
      - "6831:6831/udp"
      - "6832:6832/udp"
      # - 9411:9411
      - "14268:14268"
      - "16686:16686"
    networks:
      - playground

volumes:
  grafana:
  prometheus:

networks:
  playground:
    name: playground-network
